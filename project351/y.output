Grammar

    0 $accept: program $end

    1 program: statements
    2        | newlines statements

    3 newline: NEWLINE

    4 newlines: newline
    5         | newline newlines

    6 statements: /* empty */
    7           | statement
    8           | statement newlines statements

    9 indentation_level: TAB

   10 comparison_operator: COMPARISON

   11 statement: indentation_level statement

   12 @1: /* empty */

   13 @2: /* empty */

   14 @3: /* empty */

   15 @4: /* empty */

   16 @5: /* empty */

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 expression @5 COLON

   18 @6: /* empty */

   19 @7: /* empty */

   20 @8: /* empty */

   21 @9: /* empty */

   22 @10: /* empty */

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 expression @10 COLON
   24          | ELSE

   25 @11: /* empty */

   26 @12: /* empty */

   27 statement: IDENT @11 EQUAL unary_operator @12 assignment_expression

   28 assignment_expression: expression
   29                      | assignment_expression operator expression

   30 expression: IDENT
   31           | INT
   32           | FLOAT
   33           | STRING

   34 unary_operator: /* empty */
   35               | PLUS
   36               | MINUS

   37 operator: PLUS
   38         | MINUS
   39         | MULTIPLY
   40         | DIVIDE


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 27 30
STRING (259) 33
PLUS (260) 35 37
MINUS (261) 36 38
MULTIPLY (262) 39
DIVIDE (263) 40
INT (264) 31
FLOAT (265) 32
EQUAL (266) 27
IF (267) 17
ELIF (268) 23
ELSE (269) 24
COMPARISON (270) 10
NEWLINE (271) 3
COLON (272) 17 23
TAB (273) 9


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1 2, on right: 0
newline (21)
    on left: 3, on right: 4 5
newlines (22)
    on left: 4 5, on right: 2 5 8
statements (23)
    on left: 6 7 8, on right: 1 2 8
indentation_level (24)
    on left: 9, on right: 11
comparison_operator (25)
    on left: 10, on right: 17 23
statement (26)
    on left: 11 17 23 24 27, on right: 7 8 11
@1 (27)
    on left: 12, on right: 17
@2 (28)
    on left: 13, on right: 17
@3 (29)
    on left: 14, on right: 17
@4 (30)
    on left: 15, on right: 17
@5 (31)
    on left: 16, on right: 17
@6 (32)
    on left: 18, on right: 23
@7 (33)
    on left: 19, on right: 23
@8 (34)
    on left: 20, on right: 23
@9 (35)
    on left: 21, on right: 23
@10 (36)
    on left: 22, on right: 23
@11 (37)
    on left: 25, on right: 27
@12 (38)
    on left: 26, on right: 27
assignment_expression (39)
    on left: 28 29, on right: 27 29
expression (40)
    on left: 30 31 32 33, on right: 17 23 28 29
unary_operator (41)
    on left: 34 35 36, on right: 17 23 27
operator (42)
    on left: 37 38 39 40, on right: 29


state 0

    0 $accept: . program $end

    IDENT    shift, and go to state 1
    IF       shift, and go to state 2
    ELIF     shift, and go to state 3
    ELSE     shift, and go to state 4
    NEWLINE  shift, and go to state 5
    TAB      shift, and go to state 6

    $default  reduce using rule 6 (statements)

    program            go to state 7
    newline            go to state 8
    newlines           go to state 9
    statements         go to state 10
    indentation_level  go to state 11
    statement          go to state 12


state 1

   27 statement: IDENT . @11 EQUAL unary_operator @12 assignment_expression

    $default  reduce using rule 25 (@11)

    @11  go to state 13


state 2

   17 statement: IF . @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 expression @5 COLON

    $default  reduce using rule 12 (@1)

    @1  go to state 14


state 3

   23 statement: ELIF . @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 expression @10 COLON

    $default  reduce using rule 18 (@6)

    @6  go to state 15


state 4

   24 statement: ELSE .

    $default  reduce using rule 24 (statement)


state 5

    3 newline: NEWLINE .

    $default  reduce using rule 3 (newline)


state 6

    9 indentation_level: TAB .

    $default  reduce using rule 9 (indentation_level)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 16


state 8

    4 newlines: newline .
    5         | newline . newlines

    NEWLINE  shift, and go to state 5

    $default  reduce using rule 4 (newlines)

    newline   go to state 8
    newlines  go to state 17


state 9

    2 program: newlines . statements

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2
    ELIF   shift, and go to state 3
    ELSE   shift, and go to state 4
    TAB    shift, and go to state 6

    $default  reduce using rule 6 (statements)

    statements         go to state 18
    indentation_level  go to state 11
    statement          go to state 12


state 10

    1 program: statements .

    $default  reduce using rule 1 (program)


state 11

   11 statement: indentation_level . statement

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2
    ELIF   shift, and go to state 3
    ELSE   shift, and go to state 4
    TAB    shift, and go to state 6

    indentation_level  go to state 11
    statement          go to state 19


state 12

    7 statements: statement .
    8           | statement . newlines statements

    NEWLINE  shift, and go to state 5

    $default  reduce using rule 7 (statements)

    newline   go to state 8
    newlines  go to state 20


state 13

   27 statement: IDENT @11 . EQUAL unary_operator @12 assignment_expression

    EQUAL  shift, and go to state 21


state 14

   17 statement: IF @1 . unary_operator @2 expression @3 comparison_operator unary_operator @4 expression @5 COLON

    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    $default  reduce using rule 34 (unary_operator)

    unary_operator  go to state 24


state 15

   23 statement: ELIF @6 . unary_operator @7 expression @8 comparison_operator unary_operator @9 expression @10 COLON

    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    $default  reduce using rule 34 (unary_operator)

    unary_operator  go to state 25


state 16

    0 $accept: program $end .

    $default  accept


state 17

    5 newlines: newline newlines .

    $default  reduce using rule 5 (newlines)


state 18

    2 program: newlines statements .

    $default  reduce using rule 2 (program)


state 19

   11 statement: indentation_level statement .

    $default  reduce using rule 11 (statement)


state 20

    8 statements: statement newlines . statements

    IDENT  shift, and go to state 1
    IF     shift, and go to state 2
    ELIF   shift, and go to state 3
    ELSE   shift, and go to state 4
    TAB    shift, and go to state 6

    $default  reduce using rule 6 (statements)

    statements         go to state 26
    indentation_level  go to state 11
    statement          go to state 12


state 21

   27 statement: IDENT @11 EQUAL . unary_operator @12 assignment_expression

    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    $default  reduce using rule 34 (unary_operator)

    unary_operator  go to state 27


state 22

   35 unary_operator: PLUS .

    $default  reduce using rule 35 (unary_operator)


state 23

   36 unary_operator: MINUS .

    $default  reduce using rule 36 (unary_operator)


state 24

   17 statement: IF @1 unary_operator . @2 expression @3 comparison_operator unary_operator @4 expression @5 COLON

    $default  reduce using rule 13 (@2)

    @2  go to state 28


state 25

   23 statement: ELIF @6 unary_operator . @7 expression @8 comparison_operator unary_operator @9 expression @10 COLON

    $default  reduce using rule 19 (@7)

    @7  go to state 29


state 26

    8 statements: statement newlines statements .

    $default  reduce using rule 8 (statements)


state 27

   27 statement: IDENT @11 EQUAL unary_operator . @12 assignment_expression

    $default  reduce using rule 26 (@12)

    @12  go to state 30


state 28

   17 statement: IF @1 unary_operator @2 . expression @3 comparison_operator unary_operator @4 expression @5 COLON

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    expression  go to state 35


state 29

   23 statement: ELIF @6 unary_operator @7 . expression @8 comparison_operator unary_operator @9 expression @10 COLON

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    expression  go to state 36


state 30

   27 statement: IDENT @11 EQUAL unary_operator @12 . assignment_expression

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    assignment_expression  go to state 37
    expression             go to state 38


state 31

   30 expression: IDENT .

    $default  reduce using rule 30 (expression)


state 32

   33 expression: STRING .

    $default  reduce using rule 33 (expression)


state 33

   31 expression: INT .

    $default  reduce using rule 31 (expression)


state 34

   32 expression: FLOAT .

    $default  reduce using rule 32 (expression)


state 35

   17 statement: IF @1 unary_operator @2 expression . @3 comparison_operator unary_operator @4 expression @5 COLON

    $default  reduce using rule 14 (@3)

    @3  go to state 39


state 36

   23 statement: ELIF @6 unary_operator @7 expression . @8 comparison_operator unary_operator @9 expression @10 COLON

    $default  reduce using rule 20 (@8)

    @8  go to state 40


state 37

   27 statement: IDENT @11 EQUAL unary_operator @12 assignment_expression .
   29 assignment_expression: assignment_expression . operator expression

    PLUS      shift, and go to state 41
    MINUS     shift, and go to state 42
    MULTIPLY  shift, and go to state 43
    DIVIDE    shift, and go to state 44

    $default  reduce using rule 27 (statement)

    operator  go to state 45


state 38

   28 assignment_expression: expression .

    $default  reduce using rule 28 (assignment_expression)


state 39

   17 statement: IF @1 unary_operator @2 expression @3 . comparison_operator unary_operator @4 expression @5 COLON

    COMPARISON  shift, and go to state 46

    comparison_operator  go to state 47


state 40

   23 statement: ELIF @6 unary_operator @7 expression @8 . comparison_operator unary_operator @9 expression @10 COLON

    COMPARISON  shift, and go to state 46

    comparison_operator  go to state 48


state 41

   37 operator: PLUS .

    $default  reduce using rule 37 (operator)


state 42

   38 operator: MINUS .

    $default  reduce using rule 38 (operator)


state 43

   39 operator: MULTIPLY .

    $default  reduce using rule 39 (operator)


state 44

   40 operator: DIVIDE .

    $default  reduce using rule 40 (operator)


state 45

   29 assignment_expression: assignment_expression operator . expression

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    expression  go to state 49


state 46

   10 comparison_operator: COMPARISON .

    $default  reduce using rule 10 (comparison_operator)


state 47

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator . unary_operator @4 expression @5 COLON

    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    $default  reduce using rule 34 (unary_operator)

    unary_operator  go to state 50


state 48

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator . unary_operator @9 expression @10 COLON

    PLUS   shift, and go to state 22
    MINUS  shift, and go to state 23

    $default  reduce using rule 34 (unary_operator)

    unary_operator  go to state 51


state 49

   29 assignment_expression: assignment_expression operator expression .

    $default  reduce using rule 29 (assignment_expression)


state 50

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator . @4 expression @5 COLON

    $default  reduce using rule 15 (@4)

    @4  go to state 52


state 51

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator . @9 expression @10 COLON

    $default  reduce using rule 21 (@9)

    @9  go to state 53


state 52

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 . expression @5 COLON

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    expression  go to state 54


state 53

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 . expression @10 COLON

    IDENT   shift, and go to state 31
    STRING  shift, and go to state 32
    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34

    expression  go to state 55


state 54

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 expression . @5 COLON

    $default  reduce using rule 16 (@5)

    @5  go to state 56


state 55

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 expression . @10 COLON

    $default  reduce using rule 22 (@10)

    @10  go to state 57


state 56

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 expression @5 . COLON

    COLON  shift, and go to state 58


state 57

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 expression @10 . COLON

    COLON  shift, and go to state 59


state 58

   17 statement: IF @1 unary_operator @2 expression @3 comparison_operator unary_operator @4 expression @5 COLON .

    $default  reduce using rule 17 (statement)


state 59

   23 statement: ELIF @6 unary_operator @7 expression @8 comparison_operator unary_operator @9 expression @10 COLON .

    $default  reduce using rule 23 (statement)
